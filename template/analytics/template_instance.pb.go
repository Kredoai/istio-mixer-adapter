// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: template/analytics/template_instance.proto

/*
	Package analytics is a generated protocol buffer package.

	It is generated from these files:
		template/analytics/template_instance.proto

	It has these top-level messages:
		Type
		InstanceParam
*/
package analytics

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "istio.io/api/mixer/adapter/model/v1beta1"

import strings "strings"
import reflect "reflect"
import github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Type struct {
}

func (m *Type) Reset()                    { *m = Type{} }
func (*Type) ProtoMessage()               {}
func (*Type) Descriptor() ([]byte, []int) { return fileDescriptorTemplateInstance, []int{0} }

type InstanceParam struct {
	ApiProxy                     string            `protobuf:"bytes,1,opt,name=api_proxy,json=apiProxy,proto3" json:"api_proxy,omitempty"`
	ResponseStatusCode           string            `protobuf:"bytes,2,opt,name=response_status_code,json=responseStatusCode,proto3" json:"response_status_code,omitempty"`
	ClientIp                     string            `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	RequestVerb                  string            `protobuf:"bytes,4,opt,name=request_verb,json=requestVerb,proto3" json:"request_verb,omitempty"`
	RequestUri                   string            `protobuf:"bytes,5,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`
	RequestPath                  string            `protobuf:"bytes,6,opt,name=request_path,json=requestPath,proto3" json:"request_path,omitempty"`
	Useragent                    string            `protobuf:"bytes,7,opt,name=useragent,proto3" json:"useragent,omitempty"`
	ClientReceivedStartTimestamp string            `protobuf:"bytes,8,opt,name=client_received_start_timestamp,json=clientReceivedStartTimestamp,proto3" json:"client_received_start_timestamp,omitempty"`
	ClientReceivedEndTimestamp   string            `protobuf:"bytes,9,opt,name=client_received_end_timestamp,json=clientReceivedEndTimestamp,proto3" json:"client_received_end_timestamp,omitempty"`
	ClientSentStartTimestamp     string            `protobuf:"bytes,10,opt,name=client_sent_start_timestamp,json=clientSentStartTimestamp,proto3" json:"client_sent_start_timestamp,omitempty"`
	ClientSentEndTimestamp       string            `protobuf:"bytes,11,opt,name=client_sent_end_timestamp,json=clientSentEndTimestamp,proto3" json:"client_sent_end_timestamp,omitempty"`
	TargetSentStartTimestamp     string            `protobuf:"bytes,12,opt,name=target_sent_start_timestamp,json=targetSentStartTimestamp,proto3" json:"target_sent_start_timestamp,omitempty"`
	TargetSentEndTimestamp       string            `protobuf:"bytes,13,opt,name=target_sent_end_timestamp,json=targetSentEndTimestamp,proto3" json:"target_sent_end_timestamp,omitempty"`
	TargetReceivedStartTimestamp string            `protobuf:"bytes,14,opt,name=target_received_start_timestamp,json=targetReceivedStartTimestamp,proto3" json:"target_received_start_timestamp,omitempty"`
	TargetReceivedEndTimestamp   string            `protobuf:"bytes,15,opt,name=target_received_end_timestamp,json=targetReceivedEndTimestamp,proto3" json:"target_received_end_timestamp,omitempty"`
	ApiClaims                    map[string]string `protobuf:"bytes,200,rep,name=api_claims,json=apiClaims" json:"api_claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ApiKey                       string            `protobuf:"bytes,201,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (m *InstanceParam) Reset()                    { *m = InstanceParam{} }
func (*InstanceParam) ProtoMessage()               {}
func (*InstanceParam) Descriptor() ([]byte, []int) { return fileDescriptorTemplateInstance, []int{1} }

func (m *InstanceParam) GetApiProxy() string {
	if m != nil {
		return m.ApiProxy
	}
	return ""
}

func (m *InstanceParam) GetResponseStatusCode() string {
	if m != nil {
		return m.ResponseStatusCode
	}
	return ""
}

func (m *InstanceParam) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *InstanceParam) GetRequestVerb() string {
	if m != nil {
		return m.RequestVerb
	}
	return ""
}

func (m *InstanceParam) GetRequestUri() string {
	if m != nil {
		return m.RequestUri
	}
	return ""
}

func (m *InstanceParam) GetRequestPath() string {
	if m != nil {
		return m.RequestPath
	}
	return ""
}

func (m *InstanceParam) GetUseragent() string {
	if m != nil {
		return m.Useragent
	}
	return ""
}

func (m *InstanceParam) GetClientReceivedStartTimestamp() string {
	if m != nil {
		return m.ClientReceivedStartTimestamp
	}
	return ""
}

func (m *InstanceParam) GetClientReceivedEndTimestamp() string {
	if m != nil {
		return m.ClientReceivedEndTimestamp
	}
	return ""
}

func (m *InstanceParam) GetClientSentStartTimestamp() string {
	if m != nil {
		return m.ClientSentStartTimestamp
	}
	return ""
}

func (m *InstanceParam) GetClientSentEndTimestamp() string {
	if m != nil {
		return m.ClientSentEndTimestamp
	}
	return ""
}

func (m *InstanceParam) GetTargetSentStartTimestamp() string {
	if m != nil {
		return m.TargetSentStartTimestamp
	}
	return ""
}

func (m *InstanceParam) GetTargetSentEndTimestamp() string {
	if m != nil {
		return m.TargetSentEndTimestamp
	}
	return ""
}

func (m *InstanceParam) GetTargetReceivedStartTimestamp() string {
	if m != nil {
		return m.TargetReceivedStartTimestamp
	}
	return ""
}

func (m *InstanceParam) GetTargetReceivedEndTimestamp() string {
	if m != nil {
		return m.TargetReceivedEndTimestamp
	}
	return ""
}

func (m *InstanceParam) GetApiClaims() map[string]string {
	if m != nil {
		return m.ApiClaims
	}
	return nil
}

func (m *InstanceParam) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func init() {
	proto.RegisterType((*Type)(nil), "analytics.Type")
	proto.RegisterType((*InstanceParam)(nil), "analytics.InstanceParam")
}
func (this *Type) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Type)
	if !ok {
		that2, ok := that.(Type)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	return true
}
func (this *InstanceParam) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*InstanceParam)
	if !ok {
		that2, ok := that.(InstanceParam)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.ApiProxy != that1.ApiProxy {
		return false
	}
	if this.ResponseStatusCode != that1.ResponseStatusCode {
		return false
	}
	if this.ClientIp != that1.ClientIp {
		return false
	}
	if this.RequestVerb != that1.RequestVerb {
		return false
	}
	if this.RequestUri != that1.RequestUri {
		return false
	}
	if this.RequestPath != that1.RequestPath {
		return false
	}
	if this.Useragent != that1.Useragent {
		return false
	}
	if this.ClientReceivedStartTimestamp != that1.ClientReceivedStartTimestamp {
		return false
	}
	if this.ClientReceivedEndTimestamp != that1.ClientReceivedEndTimestamp {
		return false
	}
	if this.ClientSentStartTimestamp != that1.ClientSentStartTimestamp {
		return false
	}
	if this.ClientSentEndTimestamp != that1.ClientSentEndTimestamp {
		return false
	}
	if this.TargetSentStartTimestamp != that1.TargetSentStartTimestamp {
		return false
	}
	if this.TargetSentEndTimestamp != that1.TargetSentEndTimestamp {
		return false
	}
	if this.TargetReceivedStartTimestamp != that1.TargetReceivedStartTimestamp {
		return false
	}
	if this.TargetReceivedEndTimestamp != that1.TargetReceivedEndTimestamp {
		return false
	}
	if len(this.ApiClaims) != len(that1.ApiClaims) {
		return false
	}
	for i := range this.ApiClaims {
		if this.ApiClaims[i] != that1.ApiClaims[i] {
			return false
		}
	}
	if this.ApiKey != that1.ApiKey {
		return false
	}
	return true
}
func (this *Type) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&analytics.Type{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *InstanceParam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 21)
	s = append(s, "&analytics.InstanceParam{")
	s = append(s, "ApiProxy: "+fmt.Sprintf("%#v", this.ApiProxy)+",\n")
	s = append(s, "ResponseStatusCode: "+fmt.Sprintf("%#v", this.ResponseStatusCode)+",\n")
	s = append(s, "ClientIp: "+fmt.Sprintf("%#v", this.ClientIp)+",\n")
	s = append(s, "RequestVerb: "+fmt.Sprintf("%#v", this.RequestVerb)+",\n")
	s = append(s, "RequestUri: "+fmt.Sprintf("%#v", this.RequestUri)+",\n")
	s = append(s, "RequestPath: "+fmt.Sprintf("%#v", this.RequestPath)+",\n")
	s = append(s, "Useragent: "+fmt.Sprintf("%#v", this.Useragent)+",\n")
	s = append(s, "ClientReceivedStartTimestamp: "+fmt.Sprintf("%#v", this.ClientReceivedStartTimestamp)+",\n")
	s = append(s, "ClientReceivedEndTimestamp: "+fmt.Sprintf("%#v", this.ClientReceivedEndTimestamp)+",\n")
	s = append(s, "ClientSentStartTimestamp: "+fmt.Sprintf("%#v", this.ClientSentStartTimestamp)+",\n")
	s = append(s, "ClientSentEndTimestamp: "+fmt.Sprintf("%#v", this.ClientSentEndTimestamp)+",\n")
	s = append(s, "TargetSentStartTimestamp: "+fmt.Sprintf("%#v", this.TargetSentStartTimestamp)+",\n")
	s = append(s, "TargetSentEndTimestamp: "+fmt.Sprintf("%#v", this.TargetSentEndTimestamp)+",\n")
	s = append(s, "TargetReceivedStartTimestamp: "+fmt.Sprintf("%#v", this.TargetReceivedStartTimestamp)+",\n")
	s = append(s, "TargetReceivedEndTimestamp: "+fmt.Sprintf("%#v", this.TargetReceivedEndTimestamp)+",\n")
	keysForApiClaims := make([]string, 0, len(this.ApiClaims))
	for k, _ := range this.ApiClaims {
		keysForApiClaims = append(keysForApiClaims, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForApiClaims)
	mapStringForApiClaims := "map[string]string{"
	for _, k := range keysForApiClaims {
		mapStringForApiClaims += fmt.Sprintf("%#v: %#v,", k, this.ApiClaims[k])
	}
	mapStringForApiClaims += "}"
	if this.ApiClaims != nil {
		s = append(s, "ApiClaims: "+mapStringForApiClaims+",\n")
	}
	s = append(s, "ApiKey: "+fmt.Sprintf("%#v", this.ApiKey)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTemplateInstance(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *Type) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Type) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *InstanceParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InstanceParam) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ApiProxy) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ApiProxy)))
		i += copy(dAtA[i:], m.ApiProxy)
	}
	if len(m.ResponseStatusCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ResponseStatusCode)))
		i += copy(dAtA[i:], m.ResponseStatusCode)
	}
	if len(m.ClientIp) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ClientIp)))
		i += copy(dAtA[i:], m.ClientIp)
	}
	if len(m.RequestVerb) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.RequestVerb)))
		i += copy(dAtA[i:], m.RequestVerb)
	}
	if len(m.RequestUri) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.RequestUri)))
		i += copy(dAtA[i:], m.RequestUri)
	}
	if len(m.RequestPath) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.RequestPath)))
		i += copy(dAtA[i:], m.RequestPath)
	}
	if len(m.Useragent) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.Useragent)))
		i += copy(dAtA[i:], m.Useragent)
	}
	if len(m.ClientReceivedStartTimestamp) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ClientReceivedStartTimestamp)))
		i += copy(dAtA[i:], m.ClientReceivedStartTimestamp)
	}
	if len(m.ClientReceivedEndTimestamp) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ClientReceivedEndTimestamp)))
		i += copy(dAtA[i:], m.ClientReceivedEndTimestamp)
	}
	if len(m.ClientSentStartTimestamp) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ClientSentStartTimestamp)))
		i += copy(dAtA[i:], m.ClientSentStartTimestamp)
	}
	if len(m.ClientSentEndTimestamp) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ClientSentEndTimestamp)))
		i += copy(dAtA[i:], m.ClientSentEndTimestamp)
	}
	if len(m.TargetSentStartTimestamp) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.TargetSentStartTimestamp)))
		i += copy(dAtA[i:], m.TargetSentStartTimestamp)
	}
	if len(m.TargetSentEndTimestamp) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.TargetSentEndTimestamp)))
		i += copy(dAtA[i:], m.TargetSentEndTimestamp)
	}
	if len(m.TargetReceivedStartTimestamp) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.TargetReceivedStartTimestamp)))
		i += copy(dAtA[i:], m.TargetReceivedStartTimestamp)
	}
	if len(m.TargetReceivedEndTimestamp) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.TargetReceivedEndTimestamp)))
		i += copy(dAtA[i:], m.TargetReceivedEndTimestamp)
	}
	if len(m.ApiClaims) > 0 {
		for k, _ := range m.ApiClaims {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0xc
			i++
			v := m.ApiClaims[k]
			mapSize := 1 + len(k) + sovTemplateInstance(uint64(len(k))) + 1 + len(v) + sovTemplateInstance(uint64(len(v)))
			i = encodeVarintTemplateInstance(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintTemplateInstance(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintTemplateInstance(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if len(m.ApiKey) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintTemplateInstance(dAtA, i, uint64(len(m.ApiKey)))
		i += copy(dAtA[i:], m.ApiKey)
	}
	return i, nil
}

func encodeVarintTemplateInstance(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Type) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *InstanceParam) Size() (n int) {
	var l int
	_ = l
	l = len(m.ApiProxy)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.ResponseStatusCode)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.ClientIp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.RequestVerb)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.RequestUri)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.RequestPath)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.Useragent)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.ClientReceivedStartTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.ClientReceivedEndTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.ClientSentStartTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.ClientSentEndTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.TargetSentStartTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.TargetSentEndTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.TargetReceivedStartTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	l = len(m.TargetReceivedEndTimestamp)
	if l > 0 {
		n += 1 + l + sovTemplateInstance(uint64(l))
	}
	if len(m.ApiClaims) > 0 {
		for k, v := range m.ApiClaims {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovTemplateInstance(uint64(len(k))) + 1 + len(v) + sovTemplateInstance(uint64(len(v)))
			n += mapEntrySize + 2 + sovTemplateInstance(uint64(mapEntrySize))
		}
	}
	l = len(m.ApiKey)
	if l > 0 {
		n += 2 + l + sovTemplateInstance(uint64(l))
	}
	return n
}

func sovTemplateInstance(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTemplateInstance(x uint64) (n int) {
	return sovTemplateInstance(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *Type) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Type{`,
		`}`,
	}, "")
	return s
}
func (this *InstanceParam) String() string {
	if this == nil {
		return "nil"
	}
	keysForApiClaims := make([]string, 0, len(this.ApiClaims))
	for k, _ := range this.ApiClaims {
		keysForApiClaims = append(keysForApiClaims, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForApiClaims)
	mapStringForApiClaims := "map[string]string{"
	for _, k := range keysForApiClaims {
		mapStringForApiClaims += fmt.Sprintf("%v: %v,", k, this.ApiClaims[k])
	}
	mapStringForApiClaims += "}"
	s := strings.Join([]string{`&InstanceParam{`,
		`ApiProxy:` + fmt.Sprintf("%v", this.ApiProxy) + `,`,
		`ResponseStatusCode:` + fmt.Sprintf("%v", this.ResponseStatusCode) + `,`,
		`ClientIp:` + fmt.Sprintf("%v", this.ClientIp) + `,`,
		`RequestVerb:` + fmt.Sprintf("%v", this.RequestVerb) + `,`,
		`RequestUri:` + fmt.Sprintf("%v", this.RequestUri) + `,`,
		`RequestPath:` + fmt.Sprintf("%v", this.RequestPath) + `,`,
		`Useragent:` + fmt.Sprintf("%v", this.Useragent) + `,`,
		`ClientReceivedStartTimestamp:` + fmt.Sprintf("%v", this.ClientReceivedStartTimestamp) + `,`,
		`ClientReceivedEndTimestamp:` + fmt.Sprintf("%v", this.ClientReceivedEndTimestamp) + `,`,
		`ClientSentStartTimestamp:` + fmt.Sprintf("%v", this.ClientSentStartTimestamp) + `,`,
		`ClientSentEndTimestamp:` + fmt.Sprintf("%v", this.ClientSentEndTimestamp) + `,`,
		`TargetSentStartTimestamp:` + fmt.Sprintf("%v", this.TargetSentStartTimestamp) + `,`,
		`TargetSentEndTimestamp:` + fmt.Sprintf("%v", this.TargetSentEndTimestamp) + `,`,
		`TargetReceivedStartTimestamp:` + fmt.Sprintf("%v", this.TargetReceivedStartTimestamp) + `,`,
		`TargetReceivedEndTimestamp:` + fmt.Sprintf("%v", this.TargetReceivedEndTimestamp) + `,`,
		`ApiClaims:` + mapStringForApiClaims + `,`,
		`ApiKey:` + fmt.Sprintf("%v", this.ApiKey) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTemplateInstance(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *Type) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTemplateInstance
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTemplateInstance(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InstanceParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTemplateInstance
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InstanceParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InstanceParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseStatusCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResponseStatusCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientIp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestVerb", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestVerb = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Useragent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Useragent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientReceivedStartTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientReceivedStartTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientReceivedEndTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientReceivedEndTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSentStartTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSentStartTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSentEndTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSentEndTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetSentStartTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetSentStartTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetSentEndTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetSentEndTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetReceivedStartTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetReceivedStartTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetReceivedEndTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetReceivedEndTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiClaims", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiClaims == nil {
				m.ApiClaims = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTemplateInstance
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTemplateInstance
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthTemplateInstance
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTemplateInstance
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthTemplateInstance
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipTemplateInstance(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthTemplateInstance
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.ApiClaims[mapkey] = mapvalue
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTemplateInstance(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTemplateInstance
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTemplateInstance(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTemplateInstance
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTemplateInstance
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTemplateInstance
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTemplateInstance
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTemplateInstance(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTemplateInstance = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTemplateInstance   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("template/analytics/template_instance.proto", fileDescriptorTemplateInstance)
}

var fileDescriptorTemplateInstance = []byte{
	// 566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x3f, 0x6f, 0xd3, 0x40,
	0x18, 0xc6, 0x73, 0xfd, 0x93, 0x36, 0x97, 0xb6, 0xa0, 0x53, 0x85, 0x8e, 0xb4, 0x38, 0xa5, 0x0b,
	0x15, 0x42, 0x31, 0x2d, 0x0b, 0x20, 0x18, 0x4a, 0x15, 0xa1, 0x8a, 0x25, 0x4a, 0x0a, 0xab, 0x75,
	0xb1, 0x5f, 0xb5, 0x27, 0xfc, 0xe7, 0xb8, 0xbb, 0x44, 0xf1, 0xc6, 0x47, 0x40, 0xe2, 0x4b, 0xc0,
	0x37, 0x29, 0x5b, 0xc5, 0xc4, 0x48, 0x0c, 0x03, 0x63, 0x47, 0x46, 0xe4, 0x3b, 0xa7, 0x89, 0x23,
	0x32, 0x24, 0xf2, 0xbd, 0xf7, 0x3c, 0xbf, 0xe7, 0xf5, 0x2b, 0xbf, 0xf8, 0xa1, 0x86, 0x48, 0x84,
	0x4c, 0x83, 0xcb, 0x62, 0x16, 0xa6, 0x9a, 0xfb, 0xca, 0x9d, 0x94, 0x3c, 0x1e, 0x2b, 0xcd, 0x62,
	0x1f, 0x5a, 0x42, 0x26, 0x3a, 0x21, 0xb5, 0x1b, 0x49, 0xe3, 0x51, 0xc4, 0x47, 0x20, 0x5d, 0x16,
	0x30, 0xa1, 0x41, 0xba, 0x51, 0x12, 0x40, 0xe8, 0x0e, 0x0f, 0xfb, 0xa0, 0xd9, 0xa1, 0x0b, 0x23,
	0x0d, 0xb1, 0xe2, 0x49, 0xac, 0xac, 0x71, 0xbf, 0x8a, 0x57, 0xce, 0x52, 0x01, 0xfb, 0x5f, 0xd7,
	0xf0, 0xe6, 0x69, 0xc1, 0xec, 0x30, 0xc9, 0x22, 0xb2, 0x83, 0x6b, 0x4c, 0x70, 0x4f, 0xc8, 0x64,
	0x94, 0x52, 0xb4, 0x87, 0x0e, 0x6a, 0xdd, 0x75, 0x26, 0x78, 0x27, 0x3f, 0x93, 0xc7, 0x78, 0x5b,
	0x82, 0x12, 0x49, 0xac, 0xc0, 0x53, 0x9a, 0xe9, 0x81, 0xf2, 0xfc, 0x24, 0x00, 0xba, 0x64, 0x74,
	0x64, 0x72, 0xd7, 0x33, 0x57, 0x27, 0x49, 0x00, 0x39, 0xce, 0x0f, 0x39, 0xc4, 0xda, 0xe3, 0x82,
	0x2e, 0x5b, 0x9c, 0x2d, 0x9c, 0x0a, 0x72, 0x1f, 0x6f, 0x48, 0xf8, 0x30, 0x00, 0xa5, 0xbd, 0x21,
	0xc8, 0x3e, 0x5d, 0x31, 0xf7, 0xf5, 0xa2, 0xf6, 0x0e, 0x64, 0x9f, 0x34, 0xf1, 0xe4, 0xe8, 0x0d,
	0x24, 0xa7, 0xab, 0x46, 0x81, 0x8b, 0xd2, 0x5b, 0xc9, 0x67, 0x19, 0x82, 0xe9, 0x0b, 0x5a, 0x2d,
	0x31, 0x3a, 0x4c, 0x5f, 0x90, 0x5d, 0x5c, 0x1b, 0x28, 0x90, 0xec, 0x1c, 0x62, 0x4d, 0xd7, 0xcc,
	0xfd, 0xb4, 0x40, 0xda, 0xb8, 0x59, 0x74, 0x28, 0xc1, 0x07, 0x3e, 0x84, 0x20, 0x7f, 0x35, 0xa9,
	0x3d, 0xcd, 0x23, 0x50, 0x9a, 0x45, 0x82, 0xae, 0x1b, 0xcf, 0xae, 0x95, 0x75, 0x0b, 0x55, 0x2f,
	0x17, 0x9d, 0x4d, 0x34, 0xe4, 0x18, 0xdf, 0x9b, 0xc7, 0x40, 0x1c, 0xcc, 0x40, 0x6a, 0x06, 0xd2,
	0x28, 0x43, 0xda, 0x71, 0x30, 0x45, 0xbc, 0xc4, 0x3b, 0x05, 0x42, 0x99, 0xbf, 0xb9, 0x2e, 0xb0,
	0x01, 0x50, 0x2b, 0xe9, 0xe5, 0xbf, 0x72, 0x07, 0xcf, 0xf0, 0xdd, 0x59, 0x7b, 0x39, 0xbd, 0x6e,
	0xcc, 0x77, 0xa6, 0xe6, 0xf9, 0x64, 0xcd, 0xe4, 0x39, 0x2c, 0x48, 0xde, 0xb0, 0xc9, 0x56, 0xf2,
	0xff, 0xe4, 0x59, 0x7b, 0x39, 0x79, 0xd3, 0x26, 0x4f, 0xcd, 0xa5, 0xe4, 0x36, 0x6e, 0x16, 0xd6,
	0x85, 0xd3, 0xdf, 0xb2, 0xd3, 0xb7, 0xb2, 0xc5, 0xd3, 0x9f, 0xc7, 0x94, 0xbb, 0xb8, 0x65, 0xa7,
	0x5f, 0x86, 0x94, 0x3a, 0x79, 0x8d, 0x71, 0xfe, 0xe1, 0xfb, 0x21, 0xe3, 0x91, 0xa2, 0x97, 0x68,
	0x6f, 0xf9, 0xa0, 0x7e, 0xf4, 0xa0, 0x75, 0xb3, 0x61, 0xad, 0xd2, 0x9e, 0xb4, 0x8e, 0x05, 0x3f,
	0x31, 0xd2, 0x76, 0xac, 0x65, 0xda, 0xcd, 0x97, 0xc6, 0x9e, 0x09, 0xc5, 0x6b, 0x39, 0xe8, 0x3d,
	0xa4, 0xf4, 0x9b, 0x5d, 0xa0, 0x2a, 0x13, 0xfc, 0x0d, 0xa4, 0x8d, 0x17, 0x78, 0xab, 0x6c, 0x23,
	0xb7, 0xf1, 0x72, 0xae, 0xb3, 0xb2, 0xfc, 0x91, 0x6c, 0xe3, 0xd5, 0x21, 0x0b, 0x07, 0x93, 0x9d,
	0xb2, 0x87, 0xe7, 0x4b, 0x4f, 0xd1, 0xab, 0xa3, 0xab, 0xb1, 0x53, 0xf9, 0x31, 0x76, 0x2a, 0xd7,
	0x63, 0x07, 0x7d, 0xcc, 0x1c, 0xf4, 0x25, 0x73, 0xd0, 0x65, 0xe6, 0xa0, 0xab, 0xcc, 0x41, 0x3f,
	0x33, 0x07, 0xfd, 0xc9, 0x9c, 0xca, 0x75, 0xe6, 0xa0, 0x4f, 0xbf, 0x9c, 0xca, 0xdf, 0xef, 0xbf,
	0x3f, 0x2f, 0xa1, 0x7e, 0xd5, 0xac, 0xfb, 0x93, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x1d,
	0xe2, 0x89, 0x55, 0x04, 0x00, 0x00,
}
