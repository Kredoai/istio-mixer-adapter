#
# Keep this in sync with apigee_test.go!!!
#
# handler configuration for adapter 'apigee'
apiVersion: "config.istio.io/v1alpha2"
kind: apigee
metadata:
  name: apigee-handler
  namespace: istio-system
spec:
  apid_base: http://192.168.64.36:30580
  org_name: edgex01
  env_name: test
  proxy_name: helloworld
---
# instance configuration for template 'auth'
apiVersion: "config.istio.io/v1alpha2"
kind: auth
metadata:
  name: helloworld
  namespace: istio-system
spec:
  apikey: request.headers["apikey"] | ""
  uripath: request.path | "/"
---
# instance configuration for template 'analytics'
apiVersion: "config.istio.io/v1alpha2"
kind: analytics
metadata:
  name: helloworld
  namespace: istio-system
spec:
  apikey: request.headers["apikey"] | "" # HACK
  response_status_code: "0"
  client_ip: source.ip | ip("0.0.0.0")
  request_verb: request.method | ""
  request_uri: request.path | "" # TODO - fix
  request_path: request.path | ""
  useragent: request.useragent | ""
  client_received_start_timestamp: request.time # HACK - no ability to provide default ts values!
  client_received_end_timestamp: request.time
  target_sent_start_timestamp: request.time
  target_sent_end_timestamp: request.time
  target_received_start_timestamp: response.time
  target_received_end_timestamp: response.time
  client_sent_start_timestamp: response.time
  client_sent_end_timestamp: response.time
---
# rule to dispatch to handler 'apigee'
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: helloworld
  namespace: istio-system
spec:
  match: "true"
  actions:
  - handler: apigee-handler.apigee
    instances:
    - helloworld.auth
    - helloworld.analytics
