# handler configuration for adapter 'apigee'
apiVersion: config.istio.io/v1alpha2
kind: apigee
metadata:
  name: apigee-handler
  namespace: istio-system
spec:
  apigee_base: https://edgemicroservices.apigee.net/edgemicro/
  customer_base: http://theganyo1-eval-test.apigee.net/edgemicro-auth
  org_name: theganyo1-eval
  env_name: test
  key: ff79e704a30396a0922198cce60a5771fe41de4d1229625cfb6054353232a809
  secret: da1b306dea437789f665f27c96ea9629bee22da3745038237253ab61ff19205e
---
# Define an Istio API
apiVersion: config.istio.io/v1alpha2
kind: HTTPAPISpec
metadata:
  creationTimestamp: null
  name: helloworld
  namespace: default
spec:
  apiKeys: # populate request.api_key attr from query param "apikey" or header "x-api-key"
  - query: apikey
  - header: x-api-key
  attributes:
    attributes:
      api.service: helloworld
      api.version: "1.0.0"
  patterns:
    # example: if method=GET & path matches /somepath, override api.operation to /otherpath
  - attributes:
      api.operation: /hello
  httpMethod: GET
  uriTemplate: /api/pets
---
# Bind the Istio API to Istio services
apiVersion: config.istio.io/v1alpha2
kind: HTTPAPISpecBinding
metadata:
  creationTimestamp: null
  name: helloworld-binding
  namespace: default
spec:
  api_specs:
  - name: helloworld
    namespace: default
  services:
  - name: helloworld
    namespace: default
---
# Define an Istio Auth Policy
apiVersion: config.istio.io/v1alpha2
kind: EndUserAuthenticationPolicySpec
metadata:
  name: auth-spec
  namespace: default
spec:
  jwts:
  - issuer: https://theganyo1-eval-test.apigee.net/istio-auth/token
    audiences:
    - microgateway
    jwks_uri: https://theganyo1-eval-test.apigee.net/istio-auth/jwkPublicKeys
---
# Bind Istio Auth Policy to services
apiVersion: config.istio.io/v1alpha2
kind: EndUserAuthenticationPolicySpecBinding
metadata:
  name: auth
  namespace: default
spec:
  policies:
  - name: auth-spec
    namespace: default
  services:
  - name: helloworld    # bound to target service helloworld
    namespace: default
---
# Bind Istio authorization template attributes to Apigee adapter
apiVersion: config.istio.io/v1alpha2
kind: authorization
metadata:
  name: apigee
  namespace: istio-system
spec:
  subject:
    user: request.auth.principle | ""
    groups: ""
    properties:
      claims: request.auth.claims
  action:
    namespace: target.namespace | "default"
    service: api.service | destination.service | ""
    path: request.path | ""
    method: request.method | ""
---
# instance configuration for template 'apigee.apikey'
apiVersion: config.istio.io/v1alpha2
kind: apikey
metadata:
  name: apigee
  namespace: istio-system
spec:
  api: api.service | destination.service | ""
  api_version: api.version | ""
  api_operation : api.operation | request.path | ""
  api_key : request.api_key | request.headers["x-api-key"] | ""
  timestamp : request.time | timestampNow()
---
# instance configuration for template 'apigee.quota'
apiVersion: config.istio.io/v1alpha2
kind: quota
metadata:
  name: apigee
  namespace: istio-system
spec:
  dimensions:
   api: api.service | destination.service | ""
   path: request.path | ""
   api_key: request.api_key | request.headers["x-api-key"] | ""
   api_claims: request.auth.claims
---
# instance configuration for template 'apigee.analytics'
apiVersion: config.istio.io/v1alpha2
kind: analytics
metadata:
  name: apigee
  namespace: istio-system
spec:
  api_key: request.api_key | request.headers["x-api-key"] | ""
  api_claims: # from jwt
    api_product_list: request.auth.claims["api_product_list"] | ""
    audience: request.auth.claims["audience"] | ""
    access_token: request.auth.claims["access_token"] | ""
    client_id: request.auth.claims["client_id"] | ""
    application_name: request.auth.claims["application_name"] | ""
    scopes: request.auth.claims["scopes"] | ""
    exp: request.auth.claims["exp"] | ""
  api_proxy: api.service | destination.service | ""
  response_status_code: response.code | 0
  client_ip: source.ip | ip("0.0.0.0")
  request_verb: request.method | ""
  request_uri: request.path | ""
  request_path: request.path | ""
  useragent: request.useragent | ""
  client_received_start_timestamp: request.time
  client_received_end_timestamp: request.time
  target_sent_start_timestamp: request.time
  target_sent_end_timestamp: request.time
  target_received_start_timestamp: response.time
  target_received_end_timestamp: response.time
  client_sent_start_timestamp: response.time
  client_sent_end_timestamp: response.time
---
# rule to dispatch to handler 'apigee'
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: apigee-rule
  namespace: istio-system
spec:
  match: "true"
  actions:
  - handler: apigee-handler.apigee
    instances:
    - apigee.apikey
    - apigee.quota
    - apigee.analytics
    - apigee.auth
